(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{380:function(e,n,s){"use strict";s.r(n);var t=s(42),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"一、前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、前言"}},[e._v("#")]),e._v(" 一、前言")]),e._v(" "),s("p",[e._v("在配置springboot的配置的时候突然看到时间是Duration来配置的，上源码看到这样一个方法")]),e._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[e._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v('/**\n     * Obtains a {@code Duration} from a text string such as {@code PnDTnHnMn.nS}.\n     * <p>\n     * This will parse a textual representation of a duration, including the\n     * string produced by {@code toString()}. The formats accepted are based\n     * on the ISO-8601 duration format {@code PnDTnHnMn.nS} with days\n     * considered to be exactly 24 hours.\n     * <p>\n     * The string starts with an optional sign, denoted by the ASCII negative\n     * or positive symbol. If negative, the whole period is negated.\n     * The ASCII letter "P" is next in upper or lower case.\n     * There are then four sections, each consisting of a number and a suffix.\n     * The sections have suffixes in ASCII of "D", "H", "M" and "S" for\n     * days, hours, minutes and seconds, accepted in upper or lower case.\n     * The suffixes must occur in order. The ASCII letter "T" must occur before\n     * the first occurrence, if any, of an hour, minute or second section.\n     * At least one of the four sections must be present, and if "T" is present\n     * there must be at least one section after the "T".\n     * The number part of each section must consist of one or more ASCII digits.\n     * The number may be prefixed by the ASCII negative or positive symbol.\n     * The number of days, hours and minutes must parse to an {@code long}.\n     * The number of seconds must parse to an {@code long} with optional fraction.\n     * The decimal point may be either a dot or a comma.\n     * The fractional part may have from zero to 9 digits.\n     * <p>\n     * The leading plus/minus sign, and negative values for other units are\n     * not part of the ISO-8601 standard.\n     * <p>\n     * Examples:\n     * <pre>\n     *    "PT20.345S" -- parses as "20.345 seconds"\n     *    "PT15M"     -- parses as "15 minutes" (where a minute is 60 seconds)\n     *    "PT10H"     -- parses as "10 hours" (where an hour is 3600 seconds)\n     *    "P2D"       -- parses as "2 days" (where a day is 24 hours or 86400 seconds)\n     *    "P2DT3H4M"  -- parses as "2 days, 3 hours and 4 minutes"\n     *    "P-6H3M"    -- parses as "-6 hours and +3 minutes"\n     *    "-P6H3M"    -- parses as "-6 hours and -3 minutes"\n     *    "-P-6H+3M"  -- parses as "+6 hours and -3 minutes"\n     * </pre>\n     *\n     * @param text  the text to parse, not null\n     * @return the parsed duration, not null\n     * @throws DateTimeParseException if the text cannot be parsed to a duration\n     */')]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("static")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("Duration")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[e._v("CharSequence")]),e._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("大致意思就是按照ISO-8601持续时间格式格式都能进行解析；那就说说这个格式怎么写")]),e._v(" "),s("h1",{attrs:{id:"二、iso-8601持续时间格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、iso-8601持续时间格式"}},[e._v("#")]),e._v(" 二、ISO-8601持续时间格式")]),e._v(" "),s("p",[e._v('运行间隔以"P"开始，和上面一样也是用"T"分割日期和时间，如P1Y2M10DT2H30M15S')]),e._v(" "),s("p",[e._v("P 开始标记\n1Y - 一年\n2M - 两个月\n10D - 十天\nT - 时间和日期分的割标记\n2H - 两个小时\n30M - 三十分钟\n15S 十五秒钟")]),e._v(" "),s("p",[e._v('例子，注意如果没有年月日，"T"也不能省略')]),e._v(" "),s("p",[e._v("P1DT1M - 一天一分钟执行一次\nP1W - 一周执行一次\nPT1H - 一小时执行一次\nPT10S - 十秒执行一次")])])}),[],!1,null,null,null);n.default=a.exports}}]);